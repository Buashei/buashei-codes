name: Build and Deploy Blog (Selective Content)

on:
  push:
    branches:
      - master
  repository_dispatch:
    types: [selective-update]

permissions:
  contents: read  # Read repository files
  pages: write    # Permission to publish to GitHub Pages
  id-token: write # Verification of deployment source

concurrency:
  group: 'blog-selective-deploy'
  cancel-in-progress: true

jobs:
  fetch_content:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Main Repository
        uses: actions/checkout@v4

      - name: Create blog posts directory
        run: mkdir -p ./src/posts

      - name: Fetch Only Published Blog Posts
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.BLOG_REPO }}
          token: ${{ secrets.BLOG_PAT_TOKEN }}
          path: temp_vault
          sparse-checkout: |
            ${{ vars.BLOG_POSTS_PATH }}
          sparse-checkout-cone-mode: false

      - name: Debug - List directory structure
        run: |
          echo "Listing temp_vault contents:"
          ls -la temp_vault/
          echo "Listing blog posts path:"
          ls -la temp_vault/'${{ vars.BLOG_POSTS_PATH }}' || echo "Directory not found"

      - name: Copy only published posts to blog content directory
        run: |
          # Clear existing directory and recreate it
          rm -rf ./blog-posts-temp
          mkdir -p ./blog-posts-temp
          
          # Copy new files from the source repository to temp directory
          cp -r temp_vault/'${{ vars.BLOG_POSTS_PATH }}'/*.md ./blog-posts-temp/ 2>/dev/null || true
          cp -r temp_vault/'${{ vars.BLOG_POSTS_PATH }}'/*.mdx ./blog-posts-temp/ 2>/dev/null || true
          
          echo "Listing copied posts:"
          ls -la ./blog-posts-temp/
          rm -rf temp_vault

      # Use artifact instead of cache
      - name: Upload blog content as artifact
        uses: actions/upload-artifact@v4
        with:
          name: blog-posts
          path: ./blog-posts-temp
          retention-days: 1
  
  build:
    needs: fetch_content
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      # Download the artifact and ensure that the src/posts directory is clean
      - name: Download blog posts artifact
        run: |
          # Remove existing posts directory
          rm -rf ./src/posts
          mkdir -p ./src/posts
        
      - name: Download blog posts
        uses: actions/download-artifact@v4
        with:
          name: blog-posts
          path: ./src/posts
        
      - name: Debug - List posts
        run: |
          echo "Final posts list:"
          ls -la ./src/posts/
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        
      - name: Install Dependencies
        run: bun install
        
      - name: Build Blog with Vite
        run: bun run build
        env:
          VITE_BLOG_AUTHOR: ${{ vars.VITE_BLOG_AUTHOR }}
          VITE_BLOG_TITLE: ${{ vars.VITE_BLOG_TITLE }}
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4